1. Створення базової структури:
- Створення папок components та pages.
- Налаштування роутів в окремому файлі за допомогою react-router-dom.

2. Налаштування EditUserPage:
- Імпортуються компоненти React, дані про користувачів, департаменти, країни та статуси, а також стилі й кнопку.
- Використовується useState для збереження вибраного користувача.
- Функція handleSetUser оновлює стан user при виборі користувача з випадаючого списку.
- Використання useEffect для відстеження змін у стані user.
- Використовується контейнер для вирівнювання контенту.
- Виводиться заголовок "EDIT USER".
- Створюється селект для вибору користувача.
- Відображається інформація про користувача: повне ім'я, департамент, країна та статус.
- Створюється обгортка для кнопок "Undo" і "Save" для виконання дій з формою.
- Додаються константи initialUser та tempUser для відслідковування стану
- handleInputChange для відслідковування зміни полей та встановлення у TempUser нового значення
- handleSave для встановлення TempUser у User
- handleUndo для встановлення initialUser у User

3. Створення UserPage
- Створення сторінки із заголовком, трьома полями для фільтрів, а також таблицею з даними користувачів
- dropdown стан та toggleDropdown функція для можливості відкриття/закриття умовного селекту

4.Налаштування фільтрів UserPage
- handleFilterChange для встановлення які саме фільри обрані
- handleDeleteAllFiters для скидання всіх фільтрів до початкового значення
- handleDeleteUser для видалення користувача
- встановлення станів IsAvailableStatus та IsAvailableCountry які залежать від selectedFilters.departments 
- динамічне відображення списку юзерів за допомогою useEffect, де при кожній зміні будь-якої позиції у фільтрах відбувається рендеринг списку користувачів

5. Створення модалки для додавання користувача
- створюємо компонент Modal, в який будемо передавати users та setUsers для оновлення стану користувачів
- створюємо стан isModalOpen для керування вікном (у UserPage)
- створюємо 4 поля, зміни у яких одразу записуватимемо у selectedFields
- при натисканні на Add відпрацьовує функція, яка оновлює стан setUsers, додаючи до нього введені дані
- таким чином, новий юзер з'являється у кінці списку
